workflow:
    name: CI/CD Test Pipeline

# This demonstrates a basic 3 stage CI/CD pipeline. 
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.

variables:
  DOCKER_IMAGE: "tests:latest"

services:
  - docker:stable-dind

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."
  only:
    - main

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  image: docker:stable-dind  # Specify the Docker image for the job
  script:
    - cd $CI_PROJECT_DIR
    - echo "Running tests"
    - docker build -t $DOCKER_IMAGE .
    - docker run $DOCKER_IMAGE
    - echo "Tests are ran"
  only:
    - main

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed." 
    