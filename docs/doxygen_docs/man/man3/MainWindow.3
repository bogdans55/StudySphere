.TH "MainWindow" 3 "StudySphere" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MainWindow
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <mainwindow\&.h>\fP
.PP
Inherits QWidget\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMainWindow\fP (QWidget *parent=nullptr)"
.br
.ti -1c
.RI "\fB~MainWindow\fP () override"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBresizeEvent\fP (QResizeEvent *event) override"
.br
.in -1c
.SS "Private Slots"

.in +1c
.ti -1c
.RI "void \fBdeckButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBcreateDeck_clicked\fP ()"
.br
.ti -1c
.RI "void \fBdeckPreview_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_pushButton_library_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_pushButton_todo_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_pushButton_planer_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_pushButton_calendar_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_pushButton_stats_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_pushButton_settings_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_calendarWidget_activated\fP (const QDate &date)"
.br
.ti -1c
.RI "void \fBon_pushButton_addActivity_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_comboBox_language_currentIndexChanged\fP (int index)"
.br
.ti -1c
.RI "void \fBon_comboBox_theme_currentIndexChanged\fP (int index)"
.br
.ti -1c
.RI "void \fBon_pushButton_login_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_pushButton_addEvent_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_pushButton_addTodo_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_pushButton_deleteTodo_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_pushButton_deleteAllTodos_clicked\fP ()"
.br
.ti -1c
.RI "void \fBonTodoItemChanged\fP (QListWidgetItem *item)"
.br
.ti -1c
.RI "void \fBon_pushButton_search_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_pushButton_importDecks_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_pushButton_exportDecks_clicked\fP ()"
.br
.ti -1c
.RI "void \fBaddNewDeck\fP (QString deckNameID)"
.br
.ti -1c
.RI "void \fBon_comboBox_deck_currentIndexChanged\fP (int index)"
.br
.ti -1c
.RI "void \fBon_comboBox_deck_activated\fP (int index)"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBsaveCalendar\fP ()"
.br
.ti -1c
.RI "void \fBrefreshCalendar\fP ()"
.br
.ti -1c
.RI "bool \fBregisterUser\fP (const QString &username, const QString &password)"
.br
.ti -1c
.RI "bool \fBloginUser\fP (const QString &username, const QString &password)"
.br
.ti -1c
.RI "void \fBsavePlanner\fP ()"
.br
.ti -1c
.RI "void \fBshowActivities\fP ()"
.br
.ti -1c
.RI "void \fBsaveToDoList\fP ()"
.br
.ti -1c
.RI "void \fBsaveOnServer\fP ()"
.br
.ti -1c
.RI "void \fBsetupTableView\fP (QTableWidget *table)"
.br
.ti -1c
.RI "void \fBaddDeckToTable\fP (QString deckNameID, QTableWidget *table, int &counter)"
.br
.ti -1c
.RI "void \fBaddCreateDeckButton\fP ()"
.br
.ti -1c
.RI "void \fBloadStats\fP (\fBDeckStats\fP *deckStats)"
.br
.ti -1c
.RI "void \fBsetEnabled\fP (bool value)"
.br
.ti -1c
.RI "void \fBsetPlannerWidth\fP (int width)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "Ui::MainWindow * \fBui\fP"
.br
.ti -1c
.RI "QVector< \fBPlannerScene\fP * > \fBm_plannerScenes\fP"
.br
.ti -1c
.RI "\fBPlanner\fP \fBm_planner\fP"
.br
.ti -1c
.RI "\fBCalendar\fP \fBm_calendar\fP"
.br
.ti -1c
.RI "\fBToDoList\fP \fBm_toDoList\fP"
.br
.ti -1c
.RI "QVector< QString > \fBm_deckNames\fP"
.br
.ti -1c
.RI "bool \fBm_calendarLoaded\fP = false"
.br
.ti -1c
.RI "bool \fBm_loggedIn\fP = false"
.br
.ti -1c
.RI "bool \fBm_plannerLoaded\fP = false"
.br
.ti -1c
.RI "bool \fBm_todoLoaded\fP = false"
.br
.ti -1c
.RI "\fBUser\fP \fBm_user\fP"
.br
.ti -1c
.RI "int \fBm_deckCounter\fP = 0"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "MainWindow::MainWindow (QWidget * parent = \fRnullptr\fP)"

.SS "MainWindow::~MainWindow ()\fR [override]\fP"

.SH "Member Function Documentation"
.PP 
.SS "void MainWindow::addCreateDeckButton ()\fR [private]\fP"

.SS "void MainWindow::addDeckToTable (QString deckNameID, QTableWidget * table, int & counter)\fR [private]\fP"

.SS "void MainWindow::addNewDeck (QString deckNameID)\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::createDeck_clicked ()\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::deckButton_clicked ()\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::deckPreview_clicked ()\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::loadStats (\fBDeckStats\fP * deckStats)\fR [private]\fP"

.SS "bool MainWindow::loginUser (const QString & username, const QString & password)\fR [private]\fP"

.SS "void MainWindow::on_calendarWidget_activated (const QDate & date)\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::on_comboBox_deck_activated (int index)\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::on_comboBox_deck_currentIndexChanged (int index)\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::on_comboBox_language_currentIndexChanged (int index)\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::on_comboBox_theme_currentIndexChanged (int index)\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::on_pushButton_addActivity_clicked ()\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::on_pushButton_addEvent_clicked ()\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::on_pushButton_addTodo_clicked ()\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::on_pushButton_calendar_clicked ()\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::on_pushButton_deleteAllTodos_clicked ()\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::on_pushButton_deleteTodo_clicked ()\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::on_pushButton_exportDecks_clicked ()\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::on_pushButton_importDecks_clicked ()\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::on_pushButton_library_clicked ()\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::on_pushButton_login_clicked ()\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::on_pushButton_planer_clicked ()\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::on_pushButton_search_clicked ()\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::on_pushButton_settings_clicked ()\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::on_pushButton_stats_clicked ()\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::on_pushButton_todo_clicked ()\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::onTodoItemChanged (QListWidgetItem * item)\fR [private]\fP, \fR [slot]\fP"

.SS "void MainWindow::refreshCalendar ()\fR [private]\fP"

.SS "bool MainWindow::registerUser (const QString & username, const QString & password)\fR [private]\fP"

.SS "void MainWindow::resizeEvent (QResizeEvent * event)\fR [override]\fP, \fR [protected]\fP"

.SS "void MainWindow::saveCalendar ()\fR [private]\fP"

.SS "void MainWindow::saveOnServer ()\fR [private]\fP"

.SS "void MainWindow::savePlanner ()\fR [private]\fP"

.SS "void MainWindow::saveToDoList ()\fR [private]\fP"

.SS "void MainWindow::setEnabled (bool value)\fR [private]\fP"

.SS "void MainWindow::setPlannerWidth (int width)\fR [private]\fP"

.SS "void MainWindow::setupTableView (QTableWidget * table)\fR [private]\fP"

.SS "void MainWindow::showActivities ()\fR [private]\fP"

.SH "Member Data Documentation"
.PP 
.SS "\fBCalendar\fP MainWindow::m_calendar\fR [private]\fP"

.SS "bool MainWindow::m_calendarLoaded = false\fR [private]\fP"

.SS "int MainWindow::m_deckCounter = 0\fR [private]\fP"

.SS "QVector<QString> MainWindow::m_deckNames\fR [private]\fP"

.SS "bool MainWindow::m_loggedIn = false\fR [private]\fP"

.SS "\fBPlanner\fP MainWindow::m_planner\fR [private]\fP"

.SS "bool MainWindow::m_plannerLoaded = false\fR [private]\fP"

.SS "QVector<\fBPlannerScene\fP *> MainWindow::m_plannerScenes\fR [private]\fP"

.SS "\fBToDoList\fP MainWindow::m_toDoList\fR [private]\fP"

.SS "bool MainWindow::m_todoLoaded = false\fR [private]\fP"

.SS "\fBUser\fP MainWindow::m_user\fR [private]\fP"

.SS "Ui::MainWindow* MainWindow::ui\fR [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for StudySphere from the source code\&.
